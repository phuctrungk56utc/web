{"version":3,"sources":["utils/history.ts","components/Common/PrivateRoute.tsx","app/hooks.ts","features/auth/authSlice.ts","components/Common/Header.tsx","components/Common/Sidebar.tsx","features/dashboard/components/StatisticItem.tsx","features/dashboard/components/StudentRankingList.tsx","features/dashboard/components/Widget.tsx","features/dashboard/dashboardSlice.ts","features/dashboard/index.tsx","features/city/citySlice.ts","api/axiosClient.ts","api/studentApi.ts","components/FormFields/InputField.tsx","components/FormFields/RadioGroupField.tsx","components/FormFields/SelectField.tsx","features/student/components/StudentForm.tsx","features/student/pages/AddEditPage.tsx","features/student/components/StudentFilters.tsx","features/student/components/StudentTable.tsx","utils/common.ts","features/student/studentSlice.ts","features/student/pages/ListPage.tsx","features/student/index.tsx","components/Layout/Admin.tsx","features/auth/pages/LoginPage.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/auth/authSaga.ts","api/cityApi.ts","features/city/citySaga.ts","features/counter/counterSaga.ts","features/dashboard/dashboardSaga.ts","features/student/studentSaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","PrivateRoute","props","Boolean","localStorage","getItem","to","useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","isLoggedIn","logging","currentUser","undefined","authSlice","createSlice","name","reducers","login","state","action","loginSuccess","payload","loginFailed","logout","authActions","actions","authReducer","reducer","useStyles","makeStyles","theme","root","flexGrow","title","Header","classes","dispatch","className","AppBar","position","Toolbar","Typography","variant","Button","color","onClick","width","maxWidth","backgroundColor","palette","background","paper","link","textDecoration","selected","Sidebar","List","component","ListItem","button","ListItemIcon","Dashboard","ListItemText","primary","PeopleAlt","display","flexFlow","justifyContent","alignItems","padding","spacing","border","divider","StatisticItem","icon","label","value","Paper","Box","align","table","StudentRankingList","studentList","TableContainer","Table","size","TableHead","TableRow","TableCell","TableBody","map","student","idx","mark","id","Widget","children","mt","dashboardSlice","loading","statistics","maleCount","femaleCount","highMarkCount","lowMarkCount","highestStudentList","lowestStudentList","rankingByCityList","fetchData","fetchDataSuccess","fetchDataFailed","setStatistics","setHighestStudentList","setLowestStudentList","setRankingByCityList","dashboardActions","selectDashboardLoading","dashboard","selectDashboardStatistics","selectHighestStudentList","selectLowestStudentList","selectRankingByCityList","dashboardReducer","paddingTop","top","useEffect","LinearProgress","Grid","container","item","xs","md","lg","fontSize","ChatRounded","ChatBubble","LinearScaleSharp","ranking","cityName","rankingList","cityId","citySlice","list","fetchCityList","fetchCityListSuccess","data","fetchCityListFailed","cityActions","selectCityList","city","selectCityMap","createSelector","cityList","reduce","code","selectCityOptions","cityReducer","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","studentApi","getAll","params","get","getById","url","add","post","update","patch","remove","delete","InputField","control","inputProps","useController","field","onChange","onBlur","ref","fieldState","invalid","TextField","fullWidth","margin","inputRef","helperText","message","RadioGroupField","disabled","options","FormControl","FormLabel","RadioGroup","option","FormControlLabel","Radio","FormHelperText","SelectField","InputLabel","Select","labelId","MenuItem","schema","yup","shape","required","test","split","filter","x","length","age","positive","min","max","integer","typeError","gender","oneOf","StudentForm","initialValues","onSubmit","cityOptions","useState","setError","useForm","defaultValues","resolver","yupResolver","handleSubmit","isSubmitting","formState","handleFormSubmit","formValues","a","type","Array","isArray","Alert","severity","CircularProgress","AddEditPage","useHistory","studentId","useParams","isEdit","setStudent","console","log","handleStudentFormSubmit","toast","success","push","style","ChevronLeft","StudentFilters","onSearchChange","searchRef","useRef","htmlFor","OutlinedInput","endAdornment","Search","defaultValue","name_like","e","newFilter","target","_page","_sort","_order","current","edit","marginRight","StudentTable","cityMap","onEdit","onRemove","open","setOpen","selectedStudent","setSelectedStudent","handleClose","str","toUpperCase","slice","fontWeight","handleRemoveClick","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","studentSlice","_limit","pagination","_totalRows","fetchStudentList","fetchStudentListSuccess","fetchStudentListFailed","setFilter","setFilterWithDebounce","studentActions","selectStudentList","selectStudenLoading","selectStudentFilter","selectStudentPagination","studentReducer","titleContainer","marginBottom","ListPage","match","useRouteMatch","handleRemoveStudent","handleEditStudent","mb","my","Pagination","count","Math","ceil","page","StudentFeature","path","exact","gridTemplateRows","gridTemplateColumns","gridTemplateAreas","minHeight","header","gridArea","sidebar","borderRight","main","AdminLayout","box","LoginPage","isLogging","auth","elevation","username","password","App","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","status","increment","decrement","incrementByAmount","incrementSaga","incrementSagaSuccess","extraReducers","builder","addCase","pending","fulfilled","handleLogin","handleLogout","watchLoginFlow","authSaga","delay","setItem","put","removeItem","take","fork","call","cityApi","citySaga","takeLatest","handleIncrementSaga","counterSaga","takeEvery","toString","fetchStatistics","fetchHighestStudentList","fetchLowestStudentList","fetchRankingByCityList","fetchDashboardData","dashboardSaga","all","mark_gte","mark_lte","responseList","statisticList","callList","handleSearchDebounce","studentSaga","debounce","rootSaga","rootReducer","combineReducers","router","connectRouter","counter","counterReducer","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","run","window","location","hostname","ReactDOM","render","StrictMode","CssBaseline","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a5f6fbd2.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import * as React from 'react';\nimport { Redirect, RouteProps, Route } from 'react-router-dom';\n\nexport function PrivateRoute(props: RouteProps) {\n  // Check if user is logged in\n  // If yes, show route\n  // Otherwise, redirect to login page\n  const isLoggedIn = Boolean(localStorage.getItem('access_token'));\n  if (!isLoggedIn) return <Redirect to=\"/login\" />;\n\n  return <Route {...props} />;\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { User } from 'models/user';\n\nexport interface LoginPayload {\n  username: string;\n  password: string;\n}\n\nexport interface AuthState {\n  isLoggedIn: boolean;\n  logging?: boolean;\n  currentUser?: User;\n}\n\nconst initialState: AuthState = {\n  isLoggedIn: false,\n  logging: false,\n  currentUser: undefined,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action: PayloadAction<LoginPayload>) {\n      state.logging = true;\n    },\n    loginSuccess(state, action: PayloadAction<User>) {\n      state.isLoggedIn = true;\n      state.logging = false;\n      state.currentUser = action.payload;\n    },\n    loginFailed(state, action: PayloadAction<string>) {\n      state.logging = false;\n    },\n\n    logout(state) {\n      state.isLoggedIn = false;\n      state.currentUser = undefined;\n    },\n  },\n});\n\n// Actions\nexport const authActions = authSlice.actions;\n\n// Selectors\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\nexport const selectIsLogging = (state: any) => state.auth.logging;\n\n// Reducer\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n","import AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { useAppDispatch } from 'app/hooks';\nimport { authActions } from 'features/auth/authSlice';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport function Header() {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n\n  const handleLogoutClick = () => {\n    dispatch(authActions.logout());\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Student Management\n          </Typography>\n\n          <Button color=\"inherit\" onClick={handleLogoutClick}>\n            Logout\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Dashboard, PeopleAlt } from '@material-ui/icons';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n\n  link: {\n    color: 'inherit',\n    textDecoration: 'none',\n\n    '&.active > div': {\n      backgroundColor: theme.palette.action.selected,\n    },\n  },\n}));\n\nexport function Sidebar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <NavLink to=\"/admin/dashboard\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n        </NavLink>\n\n        <NavLink to=\"/admin/students\" className={classes.link}>\n          <ListItem button>\n            <ListItemIcon>\n              <PeopleAlt />\n            </ListItemIcon>\n            <ListItemText primary=\"Students\" />\n          </ListItem>\n        </NavLink>\n      </List>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { Box, Paper, makeStyles, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n\n    padding: theme.spacing(2),\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport interface StatisticItemProps {\n  icon: React.ReactElement;\n  label: string;\n  value: string | number;\n}\n\nexport default function StatisticItem({ icon, label, value }: StatisticItemProps) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Box>{icon}</Box>\n\n      <Box>\n        <Typography variant=\"h5\" align=\"right\">\n          {value}\n        </Typography>\n        <Typography variant=\"caption\">{label}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Student } from 'models';\nimport React from 'react';\n\nconst useStyles = makeStyles({\n  table: {},\n});\n\nexport interface StudentRankingListProps {\n  studentList: Student[];\n}\n\nexport default function StudentRankingList({ studentList }: StudentRankingListProps) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer>\n      <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell align=\"center\">#</TableCell>\n            <TableCell align=\"left\">Name</TableCell>\n            <TableCell align=\"right\">Mark</TableCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {studentList.map((student, idx) => (\n            <TableRow key={student.id}>\n              <TableCell align=\"center\">{idx + 1}</TableCell>\n              <TableCell align=\"left\">{student.name}</TableCell>\n              <TableCell align=\"right\">{student.mark}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import * as React from 'react';\nimport { Box, makeStyles, Paper, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    border: `1px solid ${theme.palette.divider}`,\n  },\n}));\n\nexport interface WidgetProps {\n  title: string;\n  children: any;\n}\n\nexport default function Widget({ title, children }: WidgetProps) {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant=\"button\">{title}</Typography>\n\n      <Box mt={2}>{children}</Box>\n    </Paper>\n  );\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { Student } from 'models';\n\nexport interface DashboardStatistics {\n  maleCount: number;\n  femaleCount: number;\n  highMarkCount: number;\n  lowMarkCount: number;\n}\n\nexport interface RankingByCity {\n  cityId: string;\n  cityName: string;\n  rankingList: Student[];\n}\n\nexport interface DashboardState {\n  loading: boolean;\n  statistics: DashboardStatistics;\n  highestStudentList: Student[];\n  lowestStudentList: Student[];\n  rankingByCityList: RankingByCity[];\n}\n\nconst initialState: DashboardState = {\n  loading: false,\n  statistics: {\n    maleCount: 0,\n    femaleCount: 0,\n    highMarkCount: 0,\n    lowMarkCount: 0,\n  },\n  highestStudentList: [],\n  lowestStudentList: [],\n  rankingByCityList: [],\n};\n\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    fetchData(state) {\n      state.loading = true;\n    },\n    fetchDataSuccess(state) {\n      state.loading = false;\n    },\n    fetchDataFailed(state) {\n      state.loading = false;\n    },\n\n    setStatistics(state, action: PayloadAction<DashboardStatistics>) {\n      state.statistics = action.payload;\n    },\n    setHighestStudentList(state, action: PayloadAction<Student[]>) {\n      state.highestStudentList = action.payload;\n    },\n    setLowestStudentList(state, action: PayloadAction<Student[]>) {\n      state.lowestStudentList = action.payload;\n    },\n    setRankingByCityList(state, action: PayloadAction<RankingByCity[]>) {\n      state.rankingByCityList = action.payload;\n    },\n  },\n});\n\n// Actions\nexport const dashboardActions = dashboardSlice.actions;\n\n// Selectors\nexport const selectDashboardLoading = (state: RootState) => state.dashboard.loading;\nexport const selectDashboardStatistics = (state: RootState) => state.dashboard.statistics;\nexport const selectHighestStudentList = (state: RootState) => state.dashboard.highestStudentList;\nexport const selectLowestStudentList = (state: RootState) => state.dashboard.lowestStudentList;\nexport const selectRankingByCityList = (state: RootState) => state.dashboard.rankingByCityList;\n\n// Reducer\nconst dashboardReducer = dashboardSlice.reducer;\nexport default dashboardReducer;\n","import { Box, Grid, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { ChatBubble, ChatRounded, LinearScaleSharp, PeopleAlt } from '@material-ui/icons';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport React, { useEffect } from 'react';\nimport StatisticItem from './components/StatisticItem';\nimport StudentRankingList from './components/StudentRankingList';\nimport Widget from './components/Widget';\nimport {\n  dashboardActions,\n  selectDashboardLoading,\n  selectDashboardStatistics,\n  selectHighestStudentList,\n  selectLowestStudentList,\n  selectRankingByCityList,\n} from './dashboardSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    paddingTop: theme.spacing(1),\n  },\n\n  loading: {\n    position: 'absolute',\n    top: theme.spacing(-1),\n    width: '100%',\n  },\n}));\n\nexport default function Dashboard() {\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(selectDashboardLoading);\n  const statistics = useAppSelector(selectDashboardStatistics);\n  const highestStudentList = useAppSelector(selectHighestStudentList);\n  const lowestStudentList = useAppSelector(selectLowestStudentList);\n  const rankingByCityList = useAppSelector(selectRankingByCityList);\n\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(dashboardActions.fetchData());\n  }, [dispatch]);\n\n  return (\n    <Box className={classes.root}>\n      {/* Loading */}\n      {loading && <LinearProgress className={classes.loading} />}\n\n      {/* Statistic Section */}\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6} lg={3}>\n          <StatisticItem\n            icon={<PeopleAlt fontSize=\"large\" color=\"primary\" />}\n            label=\"male\"\n            value={statistics.maleCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <StatisticItem\n            icon={<ChatRounded fontSize=\"large\" color=\"primary\" />}\n            label=\"female\"\n            value={statistics.femaleCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <StatisticItem\n            icon={<ChatBubble fontSize=\"large\" color=\"primary\" />}\n            label=\"mark >= 8\"\n            value={statistics.highMarkCount}\n          />\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <StatisticItem\n            icon={<LinearScaleSharp fontSize=\"large\" color=\"primary\" />}\n            label=\"mark <= 5\"\n            value={statistics.lowMarkCount}\n          />\n        </Grid>\n      </Grid>\n\n      {/* All students rankings */}\n      <Box mt={5}>\n        <Typography variant=\"h4\">All Students</Typography>\n\n        <Box mt={2}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={6} lg={3}>\n              <Widget title=\"Student with highest mark\">\n                <StudentRankingList studentList={highestStudentList} />\n              </Widget>\n            </Grid>\n\n            <Grid item xs={12} md={6} lg={3}>\n              <Widget title=\"Student with lowest mark\">\n                <StudentRankingList studentList={lowestStudentList} />\n              </Widget>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n\n      {/* Rankings by city */}\n      <Box mt={5}>\n        <Typography variant=\"h4\">Rankings by city</Typography>\n\n        <Box mt={2}>\n          <Grid container spacing={3}>\n            {rankingByCityList.map((ranking) => (\n              <Grid key={ranking.cityId} item xs={12} md={6} lg={3}>\n                <Widget title={ranking.cityName}>\n                  <StudentRankingList studentList={ranking.rankingList} />\n                </Widget>\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Box>\n    </Box>\n  );\n}\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { City, ListResponse } from 'models';\n\nexport interface CityState {\n  loading: boolean;\n  list: City[];\n}\n\nconst initialState: CityState = {\n  loading: false,\n  list: [],\n};\n\nconst citySlice = createSlice({\n  name: 'city',\n  initialState,\n  reducers: {\n    fetchCityList(state) {\n      state.loading = true;\n    },\n    fetchCityListSuccess(state, action: PayloadAction<ListResponse<City>>) {\n      state.loading = false;\n      state.list = action.payload.data;\n    },\n    fetchCityListFailed(state) {\n      state.loading = false;\n    },\n  },\n});\n\n// Actions\nexport const cityActions = citySlice.actions;\n\n// Selectors\nexport const selectCityList = (state: RootState) => state.city.list;\n\nexport const selectCityMap = createSelector(selectCityList, (cityList) =>\n  cityList.reduce((map: { [key: string]: City }, city) => {\n    map[city.code] = city;\n    return map;\n  }, {})\n);\n\nexport const selectCityOptions = createSelector(selectCityList, (cityList) =>\n  cityList.map((city) => ({\n    label: city.name,\n    value: city.code,\n  }))\n);\n\n// Reducer\nconst cityReducer = citySlice.reducer;\nexport default cityReducer;\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nconst axiosClient = axios.create({\n  baseURL: 'http://js-post-api.herokuapp.com/api',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a request interceptor\naxiosClient.interceptors.request.use(\n  function (config: AxiosRequestConfig) {\n    // Do something before request is sent\n    return config;\n  },\n  function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\naxiosClient.interceptors.response.use(\n  function (response: AxiosResponse) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response.data;\n  },\n  function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosClient;\n","import { ListParams, ListResponse, Student } from 'models';\nimport axiosClient from './axiosClient';\n\nconst studentApi = {\n  getAll(params: ListParams): Promise<ListResponse<Student>> {\n    const url = '/students';\n    return axiosClient.get(url, { params });\n  },\n\n  getById(id: string): Promise<Student> {\n    const url = `/students/${id}`;\n    return axiosClient.get(url);\n  },\n\n  add(data: Student): Promise<Student> {\n    const url = '/students';\n    return axiosClient.post(url, data);\n  },\n\n  update(data: Partial<Student>): Promise<Student> {\n    const url = `/students/${data.id}`;\n    return axiosClient.patch(url, data);\n  },\n\n  remove(id: string): Promise<any> {\n    const url = `/students/${id}`;\n    return axiosClient.delete(url);\n  },\n};\n\nexport default studentApi;\n","import { TextField } from '@material-ui/core';\nimport * as React from 'react';\nimport { InputHTMLAttributes } from 'react';\nimport { Control, useController } from 'react-hook-form';\n\nexport interface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  control: Control<any>;\n  label?: string;\n}\n\nexport function InputField({ name, control, label, ...inputProps }: InputFieldProps) {\n  const {\n    field: { value, onChange, onBlur, ref },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n\n  return (\n    <TextField\n      fullWidth\n      size=\"small\"\n      margin=\"normal\"\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n      label={label}\n      variant=\"outlined\"\n      inputRef={ref}\n      error={invalid}\n      helperText={error?.message}\n      inputProps={inputProps}\n    />\n  );\n}\n","import FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport { FormHelperText } from '@material-ui/core';\nimport * as React from 'react';\nimport { Control, useController } from 'react-hook-form';\n\nexport interface RadioOption {\n  label?: string;\n  value: number | string;\n}\n\nexport interface RadioGroupFieldProps {\n  name: string;\n  control: Control<any>;\n  label?: string;\n  disabled?: boolean;\n  options: RadioOption[];\n}\n\nexport function RadioGroupField({ name, control, label, disabled, options }: RadioGroupFieldProps) {\n  const {\n    field: { value, onChange, onBlur },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n\n  return (\n    <FormControl disabled={disabled} margin=\"normal\" component=\"fieldset\" error={invalid}>\n      <FormLabel component=\"legend\">{label}</FormLabel>\n\n      <RadioGroup name={name} value={value} onChange={onChange} onBlur={onBlur}>\n        {options.map((option) => (\n          <FormControlLabel\n            key={option.value}\n            value={option.value}\n            control={<Radio />}\n            label={option.label}\n          />\n        ))}\n      </RadioGroup>\n\n      <FormHelperText>{error?.message}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { FormHelperText, MenuItem, Select } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport * as React from 'react';\nimport { Control, useController } from 'react-hook-form';\n\nexport interface SelectOption {\n  label?: string;\n  value: number | string;\n}\n\nexport interface SelectFieldProps {\n  name: string;\n  control: Control<any>;\n  label?: string;\n  disabled?: boolean;\n  options: SelectOption[];\n}\n\nexport function SelectField({ name, control, label, disabled, options }: SelectFieldProps) {\n  const {\n    field: { value, onChange, onBlur },\n    fieldState: { invalid, error },\n  } = useController({\n    name,\n    control,\n  });\n\n  return (\n    <FormControl\n      fullWidth\n      variant=\"outlined\"\n      margin=\"normal\"\n      size=\"small\"\n      disabled={disabled}\n      error={invalid}\n    >\n      <InputLabel id={`${name}_label`}>{label}</InputLabel>\n      <Select\n        labelId={`${name}_label`}\n        value={value}\n        onChange={onChange}\n        onBlur={onBlur}\n        label={label}\n      >\n        {options.map((option) => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </Select>\n\n      <FormHelperText>{error?.message}</FormHelperText>\n    </FormControl>\n  );\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { Box, Button, CircularProgress } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { useAppSelector } from 'app/hooks';\nimport { InputField, RadioGroupField, SelectField } from 'components/FormFields';\nimport { selectCityOptions } from 'features/city/citySlice';\nimport { Student } from 'models';\nimport React from 'react';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from 'yup';\n\nexport interface StudentFormProps {\n  initialValues?: Student;\n  onSubmit?: (formValues: Student) => void;\n}\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .required('Please enter name.')\n    .test('two-words', 'Please enter at least two words', (value) => {\n      if (!value) return true;\n\n      const parts = value?.split(' ') || [];\n      return parts.filter((x) => Boolean(x)).length >= 2;\n    }),\n  age: yup\n    .number()\n    .positive('Please enter a positive number.')\n    .min(18, 'Min is 18')\n    .max(60, 'Max is 60')\n    .integer('Please enter an integer.')\n    .required('Please enter age.')\n    .typeError('Please enter a valid number.'),\n  mark: yup\n    .number()\n    .min(0, 'Min is 0')\n    .max(10, 'Max is 10')\n    .required('Please enter mark.')\n    .typeError('Please enter a valid number.'),\n  gender: yup\n    .string()\n    .oneOf(['male', 'female'], 'Please select either male or female.')\n    .required('Please select gender.'),\n  city: yup.string().required('Please select city.'),\n});\n\nexport default function StudentForm({ initialValues, onSubmit }: StudentFormProps) {\n  const cityOptions = useAppSelector(selectCityOptions);\n  const [error, setError] = useState<string>('');\n\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = useForm<Student>({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n\n  const handleFormSubmit = async (formValues: Student) => {\n    try {\n      // Clear previous submission error\n      setError('');\n\n      await onSubmit?.(formValues);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  return (\n    <Box maxWidth={400}>\n      <form onSubmit={handleSubmit(handleFormSubmit)}>\n        <InputField name=\"name\" control={control} label=\"Full Name\" />\n\n        <RadioGroupField\n          name=\"gender\"\n          control={control}\n          label=\"Gender\"\n          options={[\n            { label: 'Male', value: 'male' },\n            { label: 'Female', value: 'female' },\n          ]}\n        />\n\n        <InputField name=\"age\" control={control} label=\"Age\" type=\"number\" />\n        <InputField name=\"mark\" control={control} label=\"Mark\" type=\"number\" />\n\n        {Array.isArray(cityOptions) && cityOptions.length > 0 && (\n          <SelectField name=\"city\" control={control} label=\"City\" options={cityOptions} />\n        )}\n\n        {error && <Alert severity=\"error\">{error}</Alert>}\n\n        <Box mt={3}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\n            {isSubmitting && <CircularProgress size={16} color=\"primary\" />}\n            &nbsp;Save\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n}\n","import { Box, Typography } from '@material-ui/core';\nimport { ChevronLeft } from '@material-ui/icons';\nimport studentApi from 'api/studentApi';\nimport { Student } from 'models';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport StudentForm from '../components/StudentForm';\n\nexport default function AddEditPage() {\n  const history = useHistory();\n  const { studentId } = useParams<{ studentId: string }>();\n  const isEdit = Boolean(studentId);\n  const [student, setStudent] = useState<Student>();\n\n  useEffect(() => {\n    if (!studentId) return;\n\n    // IFFE\n    (async () => {\n      try {\n        const data: Student = await studentApi.getById(studentId);\n        setStudent(data);\n      } catch (error) {\n        console.log('Failed to fetch student details', error);\n      }\n    })();\n  }, [studentId]);\n\n  const handleStudentFormSubmit = async (formValues: Student) => {\n    // TODO: Handle submit here, call API  to add/update student\n    if (isEdit) {\n      await studentApi.update(formValues);\n    } else {\n      await studentApi.add(formValues);\n    }\n\n    // Toast success\n    toast.success('Save student successfully!');\n\n    // Redirect back to student list\n    history.push('/admin/students');\n  };\n\n  const initialValues: Student = {\n    name: '',\n    age: '',\n    mark: '',\n    gender: 'male',\n    city: '',\n    ...student,\n  } as Student;\n\n  return (\n    <Box>\n      <Link to=\"/admin/students\">\n        <Typography variant=\"caption\" style={{ display: 'flex', alignItems: 'center' }}>\n          <ChevronLeft /> Back to student list\n        </Typography>\n      </Link>\n\n      <Typography variant=\"h4\">{isEdit ? 'Update student info' : 'Add new student'}</Typography>\n\n      {(!isEdit || Boolean(student)) && (\n        <Box mt={3}>\n          <StudentForm initialValues={initialValues} onSubmit={handleStudentFormSubmit} />\n        </Box>\n      )}\n    </Box>\n  );\n}\n","import { Box, Grid, Select, MenuItem, Button } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { Search } from '@material-ui/icons';\nimport { City, ListParams } from 'models';\nimport React, { ChangeEvent, useRef } from 'react';\n\nexport interface StudentFiltersProps {\n  filter: ListParams;\n  cityList: City[];\n\n  onChange?: (newFilter: ListParams) => void;\n  onSearchChange?: (newFilter: ListParams) => void;\n}\n\nexport default function StudentFilters({\n  filter,\n  cityList,\n  onChange,\n  onSearchChange,\n}: StudentFiltersProps) {\n  const searchRef = useRef<HTMLInputElement>();\n\n  const handleSearchChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (!onSearchChange) return;\n\n    const newFilter: ListParams = {\n      ...filter,\n      name_like: e.target.value,\n      _page: 1,\n    };\n    onSearchChange(newFilter);\n  };\n\n  const handleCityChange = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!onChange) return;\n\n    const newFilter: ListParams = {\n      ...filter,\n      _page: 1,\n      city: e.target.value || undefined,\n    };\n    onChange(newFilter);\n  };\n\n  const handleSortChange = (e: ChangeEvent<{ name?: string; value: unknown }>) => {\n    if (!onChange) return;\n\n    const value = e.target.value;\n    const [_sort, _order] = (value as string).split('.');\n    const newFilter: ListParams = {\n      ...filter,\n      _sort: _sort || undefined,\n      _order: (_order as 'asc' | 'desc') || undefined,\n    };\n    onChange(newFilter);\n  };\n\n  const handleClearFilter = () => {\n    if (!onChange) return;\n\n    const newFilter: ListParams = {\n      ...filter,\n      _page: 1,\n      _sort: undefined,\n      _order: undefined,\n      city: undefined,\n      name_like: undefined,\n    };\n    onChange(newFilter);\n\n    if (searchRef.current) {\n      searchRef.current.value = '';\n    }\n  };\n\n  return (\n    <Box>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <FormControl fullWidth variant=\"outlined\" size=\"small\">\n            <InputLabel htmlFor=\"searchByName\">Search by name</InputLabel>\n            <OutlinedInput\n              id=\"searchByName\"\n              label=\"Search by name\"\n              endAdornment={<Search />}\n              defaultValue={filter.name_like}\n              onChange={handleSearchChange}\n              inputRef={searchRef}\n            />\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={3}>\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n            <InputLabel id=\"filterByCity\">Filter by city</InputLabel>\n            <Select\n              labelId=\"filterByCity\"\n              value={filter.city || ''}\n              onChange={handleCityChange}\n              label=\"Filter by city\"\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n\n              {cityList.map((city) => (\n                <MenuItem key={city.code} value={city.code}>\n                  {city.name}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={2}>\n          <FormControl variant=\"outlined\" size=\"small\" fullWidth>\n            <InputLabel id=\"sortBy\">Sort</InputLabel>\n            <Select\n              labelId=\"sortBy\"\n              value={filter._sort ? `${filter._sort}.${filter._order}` : ''}\n              onChange={handleSortChange}\n              label=\"Sort\"\n            >\n              <MenuItem value=\"\">\n                <em>No sort</em>\n              </MenuItem>\n\n              <MenuItem value=\"name.asc\">Name ASC</MenuItem>\n              <MenuItem value=\"name.desc\">Name DESC</MenuItem>\n              <MenuItem value=\"mark.asc\">Mark ASC</MenuItem>\n              <MenuItem value=\"mark.desc\">Mark DESC</MenuItem>\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12} md={6} lg={1}>\n          <Button variant=\"outlined\" color=\"primary\" fullWidth onClick={handleClearFilter}>\n            Clear\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import { Box, Button, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { City, Student } from 'models';\nimport React, { useState } from 'react';\nimport { capitalizeString, getMarkColor } from 'utils';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {},\n  edit: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nexport interface StudentTableProps {\n  studentList: Student[];\n  cityMap: {\n    [key: string]: City;\n  };\n  onEdit?: (student: Student) => void;\n  onRemove?: (student: Student) => void;\n}\n\nexport default function StudentTable({\n  studentList,\n  cityMap,\n  onEdit,\n  onRemove,\n}: StudentTableProps) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [selectedStudent, setSelectedStudent] = useState<Student>();\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleRemoveClick = (student: Student) => {\n    setSelectedStudent(student);\n    setOpen(true);\n  };\n\n  const handleRemoveConfirm = (student: Student) => {\n    onRemove?.(student);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell>Name</TableCell>\n              <TableCell>Gender</TableCell>\n              <TableCell>Mark</TableCell>\n              <TableCell>City</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {studentList.map((student) => (\n              <TableRow key={student.id}>\n                <TableCell width={310}>{student.id}</TableCell>\n                <TableCell>{student.name}</TableCell>\n                <TableCell>{capitalizeString(student.gender)}</TableCell>\n                <TableCell>\n                  <Box color={getMarkColor(student.mark)} fontWeight=\"bold\">\n                    {student.mark}\n                  </Box>\n                </TableCell>\n                <TableCell>{cityMap[student.city]?.name}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    size=\"small\"\n                    className={classes.edit}\n                    color=\"primary\"\n                    onClick={() => onEdit?.(student)}\n                  >\n                    Edit\n                  </Button>\n\n                  <Button size=\"small\" color=\"secondary\" onClick={() => handleRemoveClick(student)}>\n                    Remove\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      {/* Remove dialog */}\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">Remove a student?</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Are you sure to remove student named \"{selectedStudent?.name}\". <br />\n            This action can&apos;t be undo.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\" variant=\"outlined\">\n            Cancel\n          </Button>\n\n          <Button\n            onClick={() => handleRemoveConfirm(selectedStudent as Student)}\n            color=\"secondary\"\n            variant=\"contained\"\n            autoFocus\n          >\n            Remove\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","export const capitalizeString = (str: string): string => {\n  if (!str) return '';\n\n  return `${str[0].toUpperCase()}${str.slice(1)}`;\n};\n\nexport const getMarkColor = (mark: number): string => {\n  if (mark >= 8) return 'green';\n  if (mark >= 4) return 'goldenrod';\n  return 'red';\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from 'app/store';\nimport { ListParams, ListResponse, PaginationParams, Student } from 'models';\n\nexport interface StudentState {\n  loading: boolean;\n  list: Student[];\n  filter: ListParams;\n  pagination: PaginationParams;\n}\n\nconst initialState: StudentState = {\n  loading: false,\n  list: [],\n  filter: {\n    _page: 1,\n    _limit: 15,\n  },\n  pagination: {\n    _page: 1,\n    _limit: 15,\n    _totalRows: 15,\n  },\n};\n\nconst studentSlice = createSlice({\n  name: 'student',\n  initialState,\n  reducers: {\n    fetchStudentList(state, action: PayloadAction<ListParams>) {\n      state.loading = true;\n    },\n    fetchStudentListSuccess(state, action: PayloadAction<ListResponse<Student>>) {\n      state.list = action.payload.data;\n      state.pagination = action.payload.pagination;\n      state.loading = false;\n    },\n    fetchStudentListFailed(state) {\n      state.loading = false;\n    },\n\n    setFilter(state, action: PayloadAction<ListParams>) {\n      state.filter = action.payload;\n    },\n\n    setFilterWithDebounce(state, action: PayloadAction<ListParams>) {},\n  },\n});\n\n// Actions\nexport const studentActions = studentSlice.actions;\n\n// Selectors\nexport const selectStudentList = (state: RootState) => state.student.list;\nexport const selectStudenLoading = (state: RootState) => state.student.loading;\nexport const selectStudentFilter = (state: RootState) => state.student.filter;\nexport const selectStudentPagination = (state: RootState) => state.student.pagination;\n\n// Reducer\nconst studentReducer = studentSlice.reducer;\nexport default studentReducer;\n","import { Box, Button, LinearProgress, makeStyles, Typography } from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport studentApi from 'api/studentApi';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport { selectCityList, selectCityMap } from 'features/city/citySlice';\nimport { ListParams, Student } from 'models';\nimport React, { useEffect } from 'react';\nimport { Link, useHistory, useRouteMatch } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport StudentFilters from '../components/StudentFilters';\nimport StudentTable from '../components/StudentTable';\nimport {\n  selectStudenLoading,\n  selectStudentFilter,\n  selectStudentList,\n  selectStudentPagination,\n  studentActions,\n} from '../studentSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'relative',\n    paddingTop: theme.spacing(1),\n  },\n\n  titleContainer: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n\n    marginBottom: theme.spacing(4),\n  },\n\n  loading: {\n    position: 'absolute',\n    top: theme.spacing(-1),\n    width: '100%',\n  },\n}));\n\nexport default function ListPage() {\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const studentList = useAppSelector(selectStudentList);\n  const pagination = useAppSelector(selectStudentPagination);\n  const filter = useAppSelector(selectStudentFilter);\n  const loading = useAppSelector(selectStudenLoading);\n  const cityMap = useAppSelector(selectCityMap);\n  const cityList = useAppSelector(selectCityList);\n\n  const dispatch = useAppDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(studentActions.fetchStudentList(filter));\n  }, [dispatch, filter]);\n\n  const handlePageChange = (e: any, page: number) => {\n    dispatch(\n      studentActions.setFilter({\n        ...filter,\n        _page: page,\n      })\n    );\n  };\n\n  const handleSearchChange = (newFilter: ListParams) => {\n    dispatch(studentActions.setFilterWithDebounce(newFilter));\n  };\n\n  const handleFilterChange = (newFilter: ListParams) => {\n    dispatch(studentActions.setFilter(newFilter));\n  };\n\n  const handleRemoveStudent = async (student: Student) => {\n    try {\n      // Remove student API\n      await studentApi.remove(student?.id || '');\n\n      toast.success('Remove student successfully!');\n\n      // Trigger to re-fetch student list with current filter\n      const newFilter = { ...filter };\n      dispatch(studentActions.setFilter(newFilter));\n    } catch (error) {\n      // Toast error\n      console.log('Failed to fetch student', error);\n    }\n  };\n\n  const handleEditStudent = async (student: Student) => {\n    history.push(`${match.url}/${student.id}`);\n  };\n\n  return (\n    <Box className={classes.root}>\n      {loading && <LinearProgress className={classes.loading} />}\n\n      <Box className={classes.titleContainer}>\n        <Typography variant=\"h4\">Students</Typography>\n\n        <Link to={`${match.url}/add`} style={{ textDecoration: 'none' }}>\n          <Button variant=\"contained\" color=\"primary\">\n            Add new student\n          </Button>\n        </Link>\n      </Box>\n\n      <Box mb={3}>\n        <StudentFilters\n          filter={filter}\n          cityList={cityList}\n          onChange={handleFilterChange}\n          onSearchChange={handleSearchChange}\n        />\n      </Box>\n\n      <StudentTable\n        studentList={studentList}\n        cityMap={cityMap}\n        onEdit={handleEditStudent}\n        onRemove={handleRemoveStudent}\n      />\n\n      <Box my={2} display=\"flex\" justifyContent=\"center\">\n        <Pagination\n          color=\"primary\"\n          count={Math.ceil(pagination._totalRows / pagination._limit)}\n          page={pagination?._page}\n          onChange={handlePageChange}\n        />\n      </Box>\n    </Box>\n  );\n}\n","import { useAppDispatch } from 'app/hooks';\nimport { cityActions } from 'features/city/citySlice';\nimport React, { useEffect } from 'react';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport AddEditPage from './pages/AddEditPage';\nimport ListPage from './pages/ListPage';\n\nexport default function StudentFeature() {\n  const match = useRouteMatch();\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(cityActions.fetchCityList());\n  }, [dispatch]);\n\n  return (\n    <Switch>\n      <Route path={match.path} exact>\n        <ListPage />\n      </Route>\n\n      <Route path={`${match.path}/add`}>\n        <AddEditPage />\n      </Route>\n\n      <Route path={`${match.path}/:studentId`}>\n        <AddEditPage />\n      </Route>\n    </Switch>\n  );\n}\n","import { Box, makeStyles } from '@material-ui/core';\nimport { Header, Sidebar } from 'components/Common';\nimport Dashboard from 'features/dashboard';\nimport StudentFeature from 'features/student';\nimport * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'grid',\n    gridTemplateRows: 'auto 1fr',\n    gridTemplateColumns: '240px 1fr',\n    gridTemplateAreas: `\"header header\" \"sidebar main\"`,\n\n    minHeight: '100vh',\n  },\n\n  header: {\n    gridArea: 'header',\n  },\n  sidebar: {\n    gridArea: 'sidebar',\n    borderRight: `1px solid ${theme.palette.divider}`,\n    backgroundColor: theme.palette.background.paper,\n  },\n  main: {\n    gridArea: 'main',\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(2, 3),\n  },\n}));\n\nexport function AdminLayout() {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.header}>\n        <Header />\n      </Box>\n\n      <Box className={classes.sidebar}>\n        <Sidebar />\n      </Box>\n\n      <Box className={classes.main}>\n        <Switch>\n          <Route path=\"/admin/dashboard\">\n            <Dashboard />\n          </Route>\n\n          <Route path=\"/admin/students\">\n            <StudentFeature />\n          </Route>\n        </Switch>\n      </Box>\n    </Box>\n  );\n}\n","import { Box, Button, CircularProgress, makeStyles, Paper, Typography } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport * as React from 'react';\nimport { authActions } from '../authSlice';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n    minHeight: '100vh',\n  },\n\n  box: {\n    padding: theme.spacing(3),\n  },\n}));\n\nexport default function LoginPage() {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const isLogging = useAppSelector((state) => state.auth.logging);\n\n  const handleLoginClick = () => {\n    // TODO: Get username + pwd from login form\n    dispatch(\n      authActions.login({\n        username: '',\n        password: '',\n      })\n    );\n  };\n\n  return (\n    <div className={classes.root}>\n      <Paper elevation={1} className={classes.box}>\n        <Typography variant=\"h5\" component=\"h1\">\n          Student Management\n        </Typography>\n\n        <Box mt={4}>\n          <Button fullWidth variant=\"contained\" color=\"primary\" onClick={handleLoginClick}>\n            {isLogging && <CircularProgress size={20} color=\"secondary\" />} &nbsp; Fake Login\n          </Button>\n        </Box>\n      </Paper>\n    </div>\n  );\n}\n","import { NotFound, PrivateRoute } from 'components/Common';\nimport { AdminLayout } from './components/Layout';\nimport LoginPage from 'features/auth/pages/LoginPage';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n        <PrivateRoute path=\"/admin\">\n          <AdminLayout />\n        </PrivateRoute>\n\n        <Route>\n        <LoginPage />\n          {/* <NotFound /> */}\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk('counter/fetchCount', async (amount: number) => {\n  const response = await fetchCount(amount);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n\n    incrementSaga: (state, action: PayloadAction<number>) => {\n      state.status = 'loading';\n    },\n    incrementSagaSuccess: (state, action: PayloadAction<number>) => {\n      state.status = 'idle';\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount, incrementSaga, incrementSagaSuccess } =\n  counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd =\n  (amount: number): AppThunk =>\n  (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n      dispatch(incrementByAmount(amount));\n    }\n  };\n\nexport default counterSlice.reducer;\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport { push } from 'connected-react-router';\nimport { call, delay, fork, put, take } from 'redux-saga/effects';\nimport { authActions, LoginPayload } from './authSlice';\n\nfunction* handleLogin(payload: LoginPayload) {\n  try {\n    yield delay(1000);\n\n    localStorage.setItem('access_token', 'fake_token');\n    yield put(\n      authActions.loginSuccess({\n        id: 1,\n        name: 'Easy Frontend',\n      })\n    );\n\n    // redirect to admin page\n    yield put(push('/admin/dashboard'));\n  } catch (error:any) {\n    yield put(authActions.loginFailed(error.message));\n  }\n}\n\nfunction* handleLogout() {\n  yield delay(500);\n  localStorage.removeItem('access_token');\n  // redirect to login page\n  yield put(push('/login'));\n}\n\nfunction* watchLoginFlow() {\n  while (true) {\n    const isLoggedIn = Boolean(localStorage.getItem('access_token'));\n\n    if (!isLoggedIn) {\n      const action: PayloadAction<LoginPayload> = yield take(authActions.login.type);\n      yield fork(handleLogin, action.payload);\n    }\n\n    yield take(authActions.logout.type);\n    yield call(handleLogout);\n  }\n}\n\nexport default function* authSaga() {\n  yield fork(watchLoginFlow);\n}\n","import { City, ListResponse } from 'models';\nimport axiosClient from './axiosClient';\n\nconst cityApi = {\n  getAll(): Promise<ListResponse<City>> {\n    const url = '/cities';\n    return axiosClient.get(url, {\n      params: {\n        _page: 1,\n        _limit: 10,\n      },\n    });\n  },\n};\n\nexport default cityApi;\n","import cityApi from 'api/cityApi';\nimport { City, ListResponse } from 'models';\nimport { call, put, takeLatest } from 'redux-saga/effects';\nimport { cityActions } from './citySlice';\n\nfunction* fetchCityList() {\n  try {\n    const response: ListResponse<City> = yield call(cityApi.getAll);\n    yield put(cityActions.fetchCityListSuccess(response));\n  } catch (error) {\n    console.log('Failed to fetch city list', error);\n    yield put(cityActions.fetchCityListFailed());\n  }\n}\n\nexport default function* citySaga() {\n  yield takeLatest(cityActions.fetchCityList.type, fetchCityList);\n}\n","import { delay, put, takeEvery } from '@redux-saga/core/effects';\nimport { PayloadAction } from '@reduxjs/toolkit';\nimport { incrementSaga, incrementSagaSuccess } from './counterSlice';\n\n// export function* log(action: PayloadAction) {\n//   console.log('Log', action);\n// }\n\nfunction* handleIncrementSaga(action: PayloadAction<number>) {\n  console.log('Waiting 1s');\n  // Wait 1s\n  yield delay(1000);\n\n  console.log('Waiting done, dispatch action');\n\n  // Dispatch action success\n  yield put(incrementSagaSuccess(action.payload));\n}\n\nexport default function* counterSaga() {\n  console.log('counter saga');\n\n  yield takeEvery(incrementSaga.toString(), handleIncrementSaga);\n}\n","import cityApi from 'api/cityApi';\nimport studentApi from 'api/studentApi';\nimport { City, ListResponse, Student } from 'models';\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { dashboardActions, RankingByCity } from './dashboardSlice';\n\nfunction* fetchStatistics() {\n  const responseList: Array<ListResponse<Student>> = yield all([\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'male' }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, gender: 'female' }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_gte: 8 }),\n    call(studentApi.getAll, { _page: 1, _limit: 1, mark_lte: 5 }),\n  ]);\n\n  const statisticList = responseList.map((x) => x.pagination._totalRows);\n  const [maleCount, femaleCount, highMarkCount, lowMarkCount] = statisticList;\n  yield put(\n    dashboardActions.setStatistics({ maleCount, femaleCount, highMarkCount, lowMarkCount })\n  );\n}\n\nfunction* fetchHighestStudentList() {\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\n    _page: 1,\n    _limit: 5,\n    _sort: 'mark',\n    _order: 'desc',\n  });\n\n  yield put(dashboardActions.setHighestStudentList(data));\n}\n\nfunction* fetchLowestStudentList() {\n  const { data }: ListResponse<Student> = yield call(studentApi.getAll, {\n    _page: 1,\n    _limit: 5,\n    _sort: 'mark',\n    _order: 'asc',\n  });\n\n  yield put(dashboardActions.setLowestStudentList(data));\n}\n\nfunction* fetchRankingByCityList() {\n  // Fetch city list\n  const { data: cityList }: ListResponse<City> = yield call(cityApi.getAll);\n\n  // Fetch ranking per city\n  const callList = cityList.map((x) =>\n    call(studentApi.getAll, {\n      _page: 1,\n      _limit: 5,\n      _sort: 'mark',\n      _order: 'desc',\n      city: x.code,\n    })\n  );\n  const responseList: Array<ListResponse<Student>> = yield all(callList);\n  const rankingByCityList: Array<RankingByCity> = responseList.map((x, idx) => ({\n    cityId: cityList[idx].code,\n    cityName: cityList[idx].name,\n    rankingList: x.data,\n  }));\n\n  // Update state\n  yield put(dashboardActions.setRankingByCityList(rankingByCityList));\n}\n\nfunction* fetchDashboardData() {\n  try {\n    yield all([\n      call(fetchStatistics),\n      call(fetchHighestStudentList),\n      call(fetchLowestStudentList),\n      call(fetchRankingByCityList),\n    ]);\n\n    yield put(dashboardActions.fetchDataSuccess());\n  } catch (error) {\n    console.log('Failed to fetch dashboard data', error);\n    yield put(dashboardActions.fetchDataFailed());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(dashboardActions.fetchData.type, fetchDashboardData);\n}\n","import { PayloadAction } from '@reduxjs/toolkit';\nimport studentApi from 'api/studentApi';\nimport { ListParams, ListResponse, Student } from 'models';\nimport { call, debounce, put, takeLatest } from 'redux-saga/effects';\nimport { studentActions } from './studentSlice';\n\nfunction* fetchStudentList(action: PayloadAction<ListParams>) {\n  try {\n    const response: ListResponse<Student> = yield call(studentApi.getAll, action.payload);\n    yield put(studentActions.fetchStudentListSuccess(response));\n  } catch (error) {\n    console.log('Failed to fetch student list', error);\n    yield put(studentActions.fetchStudentListFailed());\n  }\n}\n\nfunction* handleSearchDebounce(action: PayloadAction<ListParams>) {\n  yield put(studentActions.setFilter(action.payload));\n}\n\nexport default function* studentSaga() {\n  yield takeLatest(studentActions.fetchStudentList, fetchStudentList);\n\n  yield debounce(500, studentActions.setFilterWithDebounce.type, handleSearchDebounce);\n}\n","import authSaga from 'features/auth/authSaga';\nimport citySaga from 'features/city/citySaga';\nimport counterSaga from 'features/counter/counterSaga';\nimport dashboardSaga from 'features/dashboard/dashboardSaga';\nimport studentSaga from 'features/student/studentSaga';\nimport { all } from 'redux-saga/effects';\n\nexport default function* rootSaga() {\n  yield all([counterSaga(), authSaga(), dashboardSaga(), studentSaga(), citySaga()]);\n}\n","import { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport authReducer from 'features/auth/authSlice';\nimport cityReducer from 'features/city/citySlice';\nimport dashboardReducer from 'features/dashboard/dashboardSlice';\nimport studentReducer from 'features/student/studentSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport { history } from 'utils';\nimport counterReducer from '../features/counter/counterSlice';\nimport rootSaga from './rootSaga';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: counterReducer,\n  auth: authReducer,\n  dashboard: dashboardReducer,\n  student: studentReducer,\n  city: cityReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history)),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { history } from 'utils';\nimport App from './App';\nimport { store } from './app/store';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline />\n        <App />\n      </ConnectedRouter>\n\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}